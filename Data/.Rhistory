vertex.size=((in.degree)*1.5),
vertex.label=NA,
main='Test Data connections')
in.degree<-degree(test.graph,mode="in")
#Can convert to undirected
test.graph_symmetrized <- as.undirected(test.graph, mode='collapse')
in.degree<-degree(test.graph,mode="in")
plot(test.graph_symmetrized,
#edge.color=edge_test$beer_gift,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
vertex.label=NA,
main='Test Data connections')
legend(1,
1.25,
legend = c('Profession'),
col = vertex_test$profession,
lty=1,
cex = .7)
legend(2,
1.25,
legend = c('Profession'),
col = vertex_test$profession,
lty=1,
cex = .7)
plot(test.graph_symmetrized,
#edge.color=edge_test$beer_gift,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
vertex.label=NA,
main='Test Data connections')
legend(2,
1.25,
legend = c('Profession'),
col = vertex_test$profession,
lty=1,
cex = .7)
legend(1,
1.25,
legend = c('Profession'),
col = vertex_test$profession,
#lty=1,
cex = .7)
plot(test.graph_symmetrized,
#edge.color=edge_test$beer_gift,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
vertex.label=NA,
main='Test Data Connections')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
vertex.label=NA,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
vertex.label=TRUE,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
vertex.label.size=0.5,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
vertex.label.size=0.1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
label.cex-0.5,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex-0.5,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.5,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
label.dist=1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
curved=TRUE,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=0,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=“pi”,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree="pi",
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=0,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
#vertex.label.dist=1,
vertex.label.degree=0,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
#vertex.label.dist=1,
vertex.label.degree=1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=1,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=0.5,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=0.9,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=0.2,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.5,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.7,
main='Test Data Connections (color by profession)')
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
unique(vertex_test$profession)
colrs <- c("gray50", "tomato", "gold","blue")
V(test.graph_symmetrized)$color <- colrs[V(test.graph_symmetrized)$profession]
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
#vertex.color=vertex_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
V(test.graph_symmetrized
)
V(test.graph_symmetrized)$color
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=colrs,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
colrs <- c("gray50", "tomato", "gold","blue")
V(vertex_test)$color <- colrs[V(vertex_test)$profession]
V(test.graph)$color <- colrs[V(test.graph)$profession]
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
#vertex.color=colrs,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
#Can convert to undirected
test.graph_symmetrized <- as.undirected(test.graph, mode='collapse')
in.degree<-degree(test.graph,mode="in")
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
#vertex.color=colrs,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
plot(test.graph)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=edge_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
#Combine edge and vertex attribute information into igraph format
test.graph <- graph.data.frame(d = edge_test, vertices = vertex_test)
#Can convert to undirected
test.graph_symmetrized <- as.undirected(test.graph, mode='collapse')
in.degree<-degree(test.graph,mode="in")
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
vertex.color=edge_test$profession,
edge.arrow.size=.5,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
legend(x=-1.5, y=-1.1, vertex_test$profession, pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1.5, y=-1.1, unique(vertex_test$profession), pch=21,
col="#777777", pt.bg=unique(vertex_test$profession), pt.cex=2, cex=.8, bty="n", ncol=1)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE)
legend(x=-1.5, y=-1.1, unique(vertex_test$profession), pch=21,
col="#777777", pt.bg=unique(vertex_test$profession), pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1.5, y=-1.1, unique(vertex_test$profession), pch=21,
col="#777777", pt.bg=unique(vertex_test$profession), pt.cex=2, cex=.8, bty="n", ncol=1)
unique(vertex_test$profession)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE,
margin=1)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE,
margin=0.1)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE,
margin=0.00001)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE,
margin=100.00001)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
frame=TRUE,
margin=NA)
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
# Community detection (by optimizing modularity over partitions):
clp <- cluster_optimal(test.graph_symmetrized)
class(clp)
# Community detection returns an object of class "communities"
# which igraph knows how to plot:
plot(clp, test.graph_symmetrized)
# We can also plot the communities without relying on their built-in plot:
V(test.graph_symmetrized)$community <- clp$profession
# We can also plot the communities without relying on their built-in plot:
V(test.graph_symmetrized)$community <- test.graph_symmetrized$profession
# We can also plot the communities without relying on their built-in plot:
V(test.graph_symmetrized)$community <- test.graph$profession
# We can also plot the communities without relying on their built-in plot:
V(test.graph_symmetrized)$community <- vertex_test$profession
colrs <- adjustcolor( c("gray50", "tomato", "gold", "yellowgreen"), alpha=.6)
plot(test.graph_symmetrized, vertex.color=colrs[V(test.graph_symmetrized)$community])
plot(test.graph_symmetrized,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*1.5),
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)

## Use the layout to plot the original graph
plot(G, vertex.color=rainbow(3, alpha=0.4)[V(G)$profession.df], layout=LO)
E(G_Grouped)$weight
set.seed(1234)
G = erdos.renyi.game(20, 0.25)
V(G)$Group1 = sample(3,20, replace=TRUE)
plot(G, vertex.color=rainbow(3, alpha=0.4)[V(G)$Group1])
G_Grouped = G
E(G_Grouped)$weight = 1
E(G_Grouped)$weight
for(i in unique(V(G)$Group1)) {
GroupV = which(V(G)$Group1 == i)
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
}
E(G_Grouped)$weight
## Now create a layout based on G_Grouped
set.seed(567)
LO = layout_with_fr(G_Grouped)
## Use the layout to plot the original graph
plot(G, vertex.color=rainbow(3, alpha=0.4)[V(G)$Group1], layout=LO)
##################
#G = erdos.renyi.game(20, 0.25)
#V(G)$Group1 = sample(3,20, replace=TRUE)
G<-test.graph_symmetrized
V(G)$profession.df
plot(G, vertex.color=rainbow(3)[V(G)$profession.df])
G_Grouped = G
E(G_Grouped)$weight = 1
E(G_Grouped)$weight
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
E(G_Grouped)$weight
unique(V(G)$profession.df
)
i=1
GroupV = which(V(G)$profession.df == i)
GroupV
V(G)$profession.df
which(V(G)$profession.df == i)
GroupV = which(V(G)$profession.df == i)
GroupV = which(V(G)$profession.df == i)
E(G_Grouped)$weight
unique(V(G)$profession.df)
which(V(G)$profession.df == i)
V(G_Grouped)$profession.df == i
V(G_Grouped)$profession.df[i]
which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i]
)
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
GroupV
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
G_Grouped
E(G_Grouped)$weight = 1
G_Grouped = G
E(G_Grouped)$weight = 1
## Add edges with high weight between all nodes in the same group
for(i in 1:unique(V(G_Grouped)$profession.df)) {
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
}
G_Grouped
combn(GroupV, 2)
attr=list(weight=5)
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
## Add edges with high weight between all nodes in the same group
for(i in 1:unique(V(G_Grouped)$profession.df)) {
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
}
V(G_Grouped)$profession.df[i]
print0("Ran loop for profession ",V(G_Grouped)$profession.df[i])
print(paste0("Ran loop for profession ",V(G_Grouped)$profession.df[i]))
## Add edges with high weight between all nodes in the same group
for(i in 1:unique(V(G_Grouped)$profession.df)) {
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
print(paste0("Ran loop for profession ",V(G_Grouped)$profession.df[i]))
}
G_Grouped = G
E(G_Grouped)$weight = 1
## Add edges with high weight between all nodes in the same group
for(i in 1:unique(V(G_Grouped)$profession.df)) {
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
print(paste0("Ran loop for profession ",V(G_Grouped)$profession.df[i]))
}
## Add edges with high weight between all nodes in the same group
for(i in unique(V(G_Grouped)$profession.df)) {
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
print(paste0("Ran loop for profession ",V(G_Grouped)$profession.df[i]))
}
unique(V(G_Grouped)$profession.df)
E(G_Grouped)$weight = 1
## Add edges with high weight between all nodes in the same group
for(i in 1:length(unique(V(G_Grouped)$profession.df))) {
GroupV = which(V(G_Grouped)$profession.df == V(G_Grouped)$profession.df[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
print(paste0("Ran loop for profession ",V(G_Grouped)$profession.df[i]))
}
unique(V(G_Grouped)$profession.df)
professions.list<-unique(V(G_Grouped)$profession.df)
length(professions.list)
G_Grouped = G
E(G_Grouped)$weight = 1
professions.list<-unique(V(G_Grouped)$profession.df)
## Add edges with high weight between all nodes in the same group
for(i in 1:length(professions.list)) {
GroupV = which(V(G_Grouped)$profession.df == professions.list[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
print(paste0("Ran loop for profession ",professions.list[i]))
}
LO = layout_with_fr(G_Grouped)
## Use the layout to plot the original graph
plot(G, vertex.color=rainbow(3, alpha=0.4)[V(G)$profession.df], layout=LO)
V(G)$profession.df
G_Grouped = test.graph_symmetrized
E(G_Grouped)$weight = 1
professions.list<-unique(V(G_Grouped)$profession.df)
## Add edges with high weight between all nodes in the same group
for(i in 1:length(professions.list)) {
GroupV = which(V(G_Grouped)$profession.df == professions.list[i])
G_Grouped = add_edges(G_Grouped, combn(GroupV, 2), attr=list(weight=5))
print(paste0("Ran loop for profession ",professions.list[i]))
}
## Now create a layout based on G_Grouped
LO = layout_with_fr(G_Grouped)
plot(test.graph_symmetrized,
layout=(LO*1.1),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
#vertex.size=((in.degree)*1.5),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
#vertex.size=((in.degree)*1.5),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*1.5),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.5),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color="black",
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color=("black",alpha=0.5),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.5),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.5),
rescale=T,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*0.5),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
setwd(input_datapath)
pdf("SNA_Output_group_layout.pdf")
plot(test.graph_symmetrized,
layout=(LO*0.5),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
dev.off()
LO<-norm_coords(LO, ymin=-1, ymax=1, xmin=-1, xmax=1)
plot(test.graph_symmetrized,
layout=(LO*0.5),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
plot(test.graph_symmetrized,
layout=(LO*1.1),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
pdf("SNA_Output_group_layout.pdf")
plot(test.graph_symmetrized,
layout=(LO*1.1),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
dev.off()
pdf("SNA_Output_group_layout.pdf")
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.color= adjustcolor("black", 0.7),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
dev.off()
pdf("SNA_Output_group_layout.pdf")
plot(test.graph_symmetrized,
layout=(LO*1.0),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.5,
vertex.color=vertex_test$profession.df,
vertex.size=((in.degree)*0.7),
vertex.size=3,
vertex.label=vertex_test$profession.df,
#vertex.label=NA,
vertex.label.cex=0.7,
vertex.label.color= adjustcolor("black", 0.6),
vertex.label.dist=1,
vertex.label.degree=-0.6,
main='Test Data Connections (color by profession)',
#frame=TRUE,
margin=0.0001)
dev.off()
plot(test.graph.years,
layout=(layout.graph*1.1),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.01,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*0.9),
#vertex.size=3,
#vertex.label=vertex_test$profession.df,
vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main=paste0('Network of worked-together-with ',cut.off,' years connection'),
#frame=TRUE,
margin=0.0001)
hist(edge_indiv_test$q3.years.worked.with.eiq)
mean(edge_indiv_test$q3.years.worked.with.eiq)
sd(edge_indiv_test$q3.years.worked.with.eiq)
cut.off <- round(mean(edge_indiv_test$q3.years.worked.with.eiq))
test.graph.years <- delete_edges(test.graph, E(test.graph)[q3.years.worked.with.eiq<cut.off])
layout.graph <- layout_(test.graph.years, nicely())
layout.graph<-norm_coords(layout.graph, ymin=-1, ymax=1, xmin=-1, xmax=1)
plot(test.graph.years,
layout=(layout.graph*1.1),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.01,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*0.9),
#vertex.size=3,
#vertex.label=vertex_test$profession.df,
vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main=paste0('Network of worked-together-with ',cut.off,' years connection'),
#frame=TRUE,
margin=0.0001)
pdf("SNA_Output_work_years.pdf")
plot(test.graph.years,
layout=(layout.graph*1.1),
rescale=F,
#edge.color=edge_test$connection,
edge.arrow.size=.01,
vertex.color=vertex_test$profession,
vertex.size=((in.degree)*0.9),
#vertex.size=3,
#vertex.label=vertex_test$profession.df,
vertex.label=NA,
vertex.label.cex=0.6,
vertex.label.dist=1,
vertex.label.degree=-0.6,
main=paste0('Network of worked-together-with ',cut.off,' years connection'),
#frame=TRUE,
margin=0.0001)
dev.off()

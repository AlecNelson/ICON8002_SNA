setwd(input_datapath)
#List packages used
list.of.packages <- c("igraph","randomNames","fabricatr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}
#Load all packages
lapply(list.of.packages, require, character.only = TRUE)
#Load SNA function
source("SNAfunction.R")
sna(input_datapath=input_datapath, vertex_datapath=vertex_datapath, edge_datapath=edge_datapath)
#List packages used
list.of.packages <- c("igraph","randomNames","fabricatr")
source('~/Documents/GitHub/ICON8002_SNA/SNA_Tool_Script.R', echo=TRUE)
network <- graph.data.frame(d = edge, vertices = vertex)
edge
basedirectory <- "/Users/alecnelson/Documents/GitHub/ICON8002_SNA"
inputdata_path <- "/Users/alecnelson/Documents/GitHub/ICON8002_SNA/Data"
vertex_datapath <- "vertex_test_df.csv"
edge_indiv_datapath <- "edge_indiv_test_df.csv"
edge_org_datapath <- "edge_org_test_df.csv"
setwd(input_datapath)
#List packages used
list.of.packages <- c("igraph","randomNames","fabricatr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}
#Load all packages
lapply(list.of.packages, require, character.only = TRUE)
vertex_test <- read.csv(vertex_datapath, header=T, row.names = 1)
edge_indiv_test <- read.csv(edge_indiv_datapath, header=T, row.names = 1)
edge_org_test <- read.csv(edge_org_datapath, header=T, row.names = 1)
str(vertex_test)
summary(vertex_test)
View(edge_indiv_test)
View(edge_org_test)
View(vertex_test)
colnames(vertex_test)
## setting parameters
# generated data sample size
n <- 100
# VERTEX ATTRIBUTE GENERATOR
# Name generator
ego.df <- randomNames(n, which.names="both",ethnicity = c(3:5),
name.order="last.first",name.sep=", ")
ego.df
# Profession generator based on professions and proportions from Tookes IRB (industry role)
industry.role.options <-c ("Commercial fisherman (current)", "Commercial fisherman (former)", "Commercial crabbers or dealer (current)", "Commercial crabbers or dealer (former)",
"Dock and fish house (current)", "Dock and fish house (former)", "Shellfish gatherer (current)", "Shellfish gatherer (former)")
profession.df <- sample(industry.role.options, n, replace=TRUE, prob = c(0.265, 0.265,.10, 0.10, 0.075, 0.075, 0.06,.06))
# Prospective survey questions and answers
# 1. In your opinion, what issues are currently impacting the fishing/shrimping industry on the
# Georgia coast?
# Answer choices: Economic, environmental/ecological, social, political, other (Explain)
# Output: check all that apply, so binary response for each issue (1 = yes, 0 = no)
q1a.issues.economic.vq <- sample(c(0, 1), n, replace = T)
q1b.issues.environmental.vq <- sample(c(0, 1), n, replace = T)
q1c.issues.social.vq <- sample(c(0, 1), n, replace = T)
q1d.issues.political.vq <- sample(c(0, 1), n, replace = T)
q1e.issues.other.vq <- sample(c(0, 1), n, replace = T)
q1f.issues.other.txt.vq <- ifelse(q1e.issues.other.vq == 1, "Explanation", "N/A")
# 2. How satisfied are you with the current economic state (e.g., available market, pricing, transportation)
# of the shrimping/fishing industry on the Georgia coast?
# Answer choices: Very satisfied, satisfied, no opinion, unsatisfied, very unsatisfied
# Output: likert scale qualitative
satisfaction.options <- c("Very satisfied", "Satisfied", "No opinion", "Unsatisfied", "Very unsatisfied")
q2.satisfaction.opinion.vq <- sample(satisfaction.options, n, replace = T)
# 3. The outlook of the fishing/shrimping industry is positive
# Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
agree.options <- c("Strongly agree", "Agree", "Neutral", "Disagree", "Strongly disagree")
q3.future.outlook.vq <- sample(agree.options, n, replace = T)
# 4. Your opinions or concerns as a member of the coastal community are considered in the decision-making process
#  Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
q4.opinions.considered.vq <- sample(agree.options, n, replace = T)
# 5. Have you ever attended a meeting hosted by the Georgia Department of Natural Resources?
# Answer choices: Yes, No
# Output: qualitative binary
binary.qual.options <- c("Yes", "No")
q5.DNR.mtg.vq <- sample(binary.qual.options, n, replace = T)
# 6. Which dock do you use?
# Answer choices: none
# Output: free response
# creating hypothetical dock list for data generation purposes
dock.options <- c("Brunswick Dock", "Savannah Dock", "Piedmont Dock", "South GA Dock", "Derrien Dock", "St. Simons Dock", "Jekyll Dock")
q6.primary.dock.vq <- sample(dock.options, n, replace = T)
# 6a. If you use multiple docks, list them here
# Answer choices: none
# Output: free response
q6a.additional.dock.vq <- sample(c(dock.options, "N/A"), n, replace = T, p = c(.028571429, .028571429, .028571429, .028571429, .028571429, .028571429, .028571429, 0.8))
# 7. Where is your primary dock located?
# Answer choices: none
# Output: free response
#creating hypothetical dock list for data generation purposes
dock.location.options <- c("Brunswick", "Savannah", "Piedmont", "Derrien", "St. Simons", "Little St. Simons", "Jeckyll Island")
q7.dock.location.vq <- sample(dock.location.options, n, replace = T)
# 8. Primary dock location influences where you are able to fish or shrimp
# Answer choices: Strongly agree, agree, unsure, disagree, strongly disagree
# Output: likert scale qualitative
q8.dock.influence.fish.vq <- sample(agree.options, n, replace = T)
# 9. Black gill disease in coastal shrimp has influenced where and how you shrimp
# Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
q9.black.gill.influence.vq <- sample(agree.options, n, replace = T)
# 9a. If so, how?
# Output: free response
q9a.black.gill.influence.expl.vq <- ifelse(q9.black.gill.influence.vq == "Strongly agree" | q9.black.gill.influence.vq == "Agree", "Explanation", "N/A")
# 10. Have you observed black gill disease in your shrimp catch?
# Answer choices: Yes, No
# Output: qualitative binary
qX.black.gill.observed.vq <- sample(binary.qual.options, n, replace = T)
# 10a. If yes, in which of the following coastal shrimping areas have you caught shrimp with black gill disease?
# Answer choices: North of Savannah, Between Sapelo Island and Savannah, Between St. Simons Island and Sapelo Island, Between St. Simons Island and Jekyll Island,
# South of Jekyll Island
# Output: qualitative categorical
black.gill.location.options <- c("North of Savannah", "Between Sapelo Island and Savannah", "Between St. Simons Island and Sapelo Island", "Between St. Simons Island and Jekyll Island",
"South of Jekyll Island")
qXa.black.gill.location.vq <- ifelse(qX.black.gill.observed.vq == "Yes", sample(black.gill.location.options, n, replace = T), "N/A")
# 10b. If yes, approximately when did you first observe black gill in your catch (how many years ago)?
# Answer choices: none
# Output: free response, but likely continuous integer
qXb.black.gill.time.vq <- ifelse(qX.black.gill.observed.vq == "Yes", sample(c(1:15), n, replace = T), "N/A")
# tag for vertex sheet questions = ".vq"
vq<-ls(pattern = ".vq")
vq
q10.black.gill.observed.vq <- sample(binary.qual.options, n, replace = T)
# 10a. If yes, in which of the following coastal shrimping areas have you caught shrimp with black gill disease?
# Answer choices: North of Savannah, Between Sapelo Island and Savannah, Between St. Simons Island and Sapelo Island, Between St. Simons Island and Jekyll Island,
# South of Jekyll Island
# Output: qualitative categorical
black.gill.location.options <- c("North of Savannah", "Between Sapelo Island and Savannah", "Between St. Simons Island and Sapelo Island", "Between St. Simons Island and Jekyll Island",
"South of Jekyll Island")
q10a.black.gill.location.vq <- ifelse(qX.black.gill.observed.vq == "Yes", sample(black.gill.location.options, n, replace = T), "N/A")
# 10b. If yes, approximately when did you first observe black gill in your catch (how many years ago)?
# Answer choices: none
# Output: free response, but likely continuous integer
q10b.black.gill.time.vq <- ifelse(qX.black.gill.observed.vq == "Yes", sample(c(1:15), n, replace = T), "N/A")
# tag for vertex sheet questions = ".vq"
vq<-ls(pattern = ".vq")
vq
#List packages used
list.of.packages <- c("igraph","randomNames","fabricatr","gtools")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}
#Load all packages
lapply(list.of.packages, require, character.only = TRUE)
mixedsort(vq)
vertex.test.df <-as.data.frame(cbind(ego.df, profession.df,as.data.frame(mget(vq))))
names(vertex.test.df)[1]="ego"
View(vertex.test.df)
# tag for vertex sheet questions = ".vq"
vq<-ls(pattern = ".vq")
vq<-mixedsort(vq)
vertex.test.df <-as.data.frame(cbind(ego.df, profession.df,as.data.frame(mget(vq))))
names(vertex.test.df)[1]="ego"
View(vertex.test.df)
write.csv(vertex.test.df,"vertex_test_df.csv")
View(vertex.test.df)
# Data Processing for ICON 8002
# This script serves the purpose of generating data with various input
# formats for use in developing SNA tool
# Edited on 10/9/18 - BBB
### NOTE: Run all code at once and then view output tables. Edge attribute sheets are dependent upon random name generation in Vertex Sheet.
############################
#basedirectory <- "/Users/alecnelson/Documents/GitHub/ICON8002_SNA"
basedirectory <- "/Users/BryanBozeman/Documents/GitHub/ICON8002_SNA"
#inputdata_path <- "/Users/alecnelson/Documents/GitHub/ICON8002_SNA/Data"
input_datapath <- "/Users/BryanBozeman/Documents/GitHub/ICON8002_SNA/Data"
vertex_datapath <- "vertex_test_df.csv"
edge_indiv_datapath <- "edge_indiv_test_df.csv"
edge_org_datapath <- "edge_org_test_df.csv"
setwd(input_datapath)
#List packages used
list.of.packages <- c("igraph","randomNames","fabricatr","gtools")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}
#Load all packages
lapply(list.of.packages, require, character.only = TRUE)
########################################################
########################################################
## input data structure
## 3 data sheets (csv files), 1 for vertices, 1 for connections/edges between individuals,
## 1 for connections/edges between individuals and groups/organizations
## attributes can be numeric and characters, continuous and categorical, or open response
# The attribute data for this script is in a comma-separated-value
# (CSV) file. read.csv() loads a CSV file into a data frame
# object. In this case, we do have a header row, so we set
# header=T, which tells R that the first row of data contains
# column names.
vertex_test <- read.csv(vertex_datapath, header=T, row.names = 1)
edge_indiv_test <- read.csv(edge_indiv_datapath, header=T, row.names = 1)
edge_org_test <- read.csv(edge_org_datapath, header=T, row.names = 1)
str(vertex_test)
summary(vertex_test)
head(vertex_test)
colnames(vertex_test)
str(edge_indiv_test)
summary(edge_indiv_test)
head(edge_indiv_test)
colnames(edge_indiv_test)
str(edge_org_test)
summary(edge_org_test)
head(edge_org_test)
colnames(edge_org_test)
###########################################
################################
###############
### Generating demonstration data
###############
################################
###########################################
## setting parameters
# generated data sample size
n <- 100
# This code uses the "sample" function throughout, so various hypothesized scenarios can
# easily be constructed by altering the probabilities ("prob = ...") within each line of code
################################
###########
##### Sheet 1: Vertex attributes
###########
################################
# VERTEX ATTRIBUTE GENERATOR
# Name generator
ego.df <- randomNames(n, which.names="both",ethnicity = c(3:5),
name.order="last.first",name.sep=", ")
ego.df
# Profession generator based on professions and proportions from Tookes IRB (industry role)
industry.role.options <-c ("Commercial fisherman (current)", "Commercial fisherman (former)", "Commercial crabbers or dealer (current)", "Commercial crabbers or dealer (former)",
"Dock and fish house (current)", "Dock and fish house (former)", "Shellfish gatherer (current)", "Shellfish gatherer (former)")
profession.df <- sample(industry.role.options, n, replace=TRUE, prob = c(0.265, 0.265,.10, 0.10, 0.075, 0.075, 0.06,.06))
# Prospective survey questions and answers
# 1. In your opinion, what issues are currently impacting the fishing/shrimping industry on the
# Georgia coast?
# Answer choices: Economic, environmental/ecological, social, political, other (Explain)
# Output: check all that apply, so binary response for each issue (1 = yes, 0 = no)
q1a.issues.economic.vq <- sample(c(0, 1), n, replace = T)
q1b.issues.environmental.vq <- sample(c(0, 1), n, replace = T)
q1c.issues.social.vq <- sample(c(0, 1), n, replace = T)
q1d.issues.political.vq <- sample(c(0, 1), n, replace = T)
q1e.issues.other.vq <- sample(c(0, 1), n, replace = T)
q1f.issues.other.txt.vq <- ifelse(q1e.issues.other.vq == 1, "Explanation", "N/A")
# 2. How satisfied are you with the current economic state (e.g., available market, pricing, transportation)
# of the shrimping/fishing industry on the Georgia coast?
# Answer choices: Very satisfied, satisfied, no opinion, unsatisfied, very unsatisfied
# Output: likert scale qualitative
satisfaction.options <- c("Very satisfied", "Satisfied", "No opinion", "Unsatisfied", "Very unsatisfied")
q2.satisfaction.opinion.vq <- sample(satisfaction.options, n, replace = T)
# 3. The outlook of the fishing/shrimping industry is positive
# Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
agree.options <- c("Strongly agree", "Agree", "Neutral", "Disagree", "Strongly disagree")
q3.future.outlook.vq <- sample(agree.options, n, replace = T)
# 4. Your opinions or concerns as a member of the coastal community are considered in the decision-making process
#  Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
q4.opinions.considered.vq <- sample(agree.options, n, replace = T)
# 5. Have you ever attended a meeting hosted by the Georgia Department of Natural Resources?
# Answer choices: Yes, No
# Output: qualitative binary
binary.qual.options <- c("Yes", "No")
q5.DNR.mtg.vq <- sample(binary.qual.options, n, replace = T)
# 6. Which dock do you use?
# Answer choices: none
# Output: free response
# creating hypothetical dock list for data generation purposes
dock.options <- c("Brunswick Dock", "Savannah Dock", "Piedmont Dock", "South GA Dock", "Derrien Dock", "St. Simons Dock", "Jekyll Dock")
q6.primary.dock.vq <- sample(dock.options, n, replace = T)
# 6a. If you use multiple docks, list them here
# Answer choices: none
# Output: free response
q6a.additional.dock.vq <- sample(c(dock.options, "N/A"), n, replace = T, p = c(.028571429, .028571429, .028571429, .028571429, .028571429, .028571429, .028571429, 0.8))
# 7. Where is your primary dock located?
# Answer choices: none
# Output: free response
#creating hypothetical dock list for data generation purposes
dock.location.options <- c("Brunswick", "Savannah", "Piedmont", "Derrien", "St. Simons", "Little St. Simons", "Jeckyll Island")
q7.dock.location.vq <- sample(dock.location.options, n, replace = T)
# 8. Primary dock location influences where you are able to fish or shrimp
# Answer choices: Strongly agree, agree, unsure, disagree, strongly disagree
# Output: likert scale qualitative
q8.dock.influence.fish.vq <- sample(agree.options, n, replace = T)
# 9. Black gill disease in coastal shrimp has influenced where and how you shrimp
# Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
q9.black.gill.influence.vq <- sample(agree.options, n, replace = T)
# 9a. If so, how?
# Output: free response
q9a.black.gill.influence.expl.vq <- ifelse(q9.black.gill.influence.vq == "Strongly agree" | q9.black.gill.influence.vq == "Agree", "Explanation", "N/A")
# 10. Have you observed black gill disease in your shrimp catch?
# Answer choices: Yes, No
# Output: qualitative binary
q10.black.gill.observed.vq <- sample(binary.qual.options, n, replace = T)
# 10a. If yes, in which of the following coastal shrimping areas have you caught shrimp with black gill disease?
# Answer choices: North of Savannah, Between Sapelo Island and Savannah, Between St. Simons Island and Sapelo Island, Between St. Simons Island and Jekyll Island,
# South of Jekyll Island
# Output: qualitative categorical
black.gill.location.options <- c("North of Savannah", "Between Sapelo Island and Savannah", "Between St. Simons Island and Sapelo Island", "Between St. Simons Island and Jekyll Island",
"South of Jekyll Island")
q10a.black.gill.location.vq <- ifelse(qX.black.gill.observed.vq == "Yes", sample(black.gill.location.options, n, replace = T), "N/A")
# 10b. If yes, approximately when did you first observe black gill in your catch (how many years ago)?
# Answer choices: none
# Output: free response, but likely continuous integer
q10b.black.gill.time.vq <- ifelse(qX.black.gill.observed.vq == "Yes", sample(c(1:15), n, replace = T), "N/A")
########## End Vertex sheet questions. Now time to put it all together into one data frame
# tag for vertex sheet questions = ".vq"
vq<-ls(pattern = ".vq")
vq<-mixedsort(vq)
vertex.test.df <-as.data.frame(cbind(ego.df, profession.df,as.data.frame(mget(vq))))
names(vertex.test.df)[1]="ego"
write.csv(vertex.test.df,"vertex_test_df.csv")
vertex_test <- read.csv(vertex_datapath, header=T, row.names = 1)
edge_indiv_test <- read.csv(edge_indiv_datapath, header=T, row.names = 1)
edge_org_test <- read.csv(edge_org_datapath, header=T, row.names = 1)
str(vertex_test)
summary(vertex_test)
head(vertex_test)
colnames(vertex_test)
str(edge_indiv_test)
summary(edge_indiv_test)
head(edge_indiv_test)
colnames(edge_indiv_test)
str(edge_org_test)
summary(edge_org_test)
head(edge_org_test)
colnames(edge_org_test)
###########################################
################################
###############
### Generating demonstration data
###############
################################
###########################################
## setting parameters
# generated data sample size
n <- 100
# This code uses the "sample" function throughout, so various hypothesized scenarios can
# easily be constructed by altering the probabilities ("prob = ...") within each line of code
################################
###########
##### Sheet 1: Vertex attributes
###########
################################
# VERTEX ATTRIBUTE GENERATOR
# Name generator
ego.df <- randomNames(n, which.names="both",ethnicity = c(3:5),
name.order="last.first",name.sep=", ")
ego.df
# Profession generator based on professions and proportions from Tookes IRB (industry role)
industry.role.options <-c ("Commercial fisherman (current)", "Commercial fisherman (former)", "Commercial crabbers or dealer (current)", "Commercial crabbers or dealer (former)",
"Dock and fish house (current)", "Dock and fish house (former)", "Shellfish gatherer (current)", "Shellfish gatherer (former)")
profession.df <- sample(industry.role.options, n, replace=TRUE, prob = c(0.265, 0.265,.10, 0.10, 0.075, 0.075, 0.06,.06))
# Prospective survey questions and answers
# 1. In your opinion, what issues are currently impacting the fishing/shrimping industry on the
# Georgia coast?
# Answer choices: Economic, environmental/ecological, social, political, other (Explain)
# Output: check all that apply, so binary response for each issue (1 = yes, 0 = no)
q1a.issues.economic.vq <- sample(c(0, 1), n, replace = T)
q1b.issues.environmental.vq <- sample(c(0, 1), n, replace = T)
q1c.issues.social.vq <- sample(c(0, 1), n, replace = T)
q1d.issues.political.vq <- sample(c(0, 1), n, replace = T)
q1e.issues.other.vq <- sample(c(0, 1), n, replace = T)
q1f.issues.other.txt.vq <- ifelse(q1e.issues.other.vq == 1, "Explanation", "N/A")
# 2. How satisfied are you with the current economic state (e.g., available market, pricing, transportation)
# of the shrimping/fishing industry on the Georgia coast?
# Answer choices: Very satisfied, satisfied, no opinion, unsatisfied, very unsatisfied
# Output: likert scale qualitative
satisfaction.options <- c("Very satisfied", "Satisfied", "No opinion", "Unsatisfied", "Very unsatisfied")
q2.satisfaction.opinion.vq <- sample(satisfaction.options, n, replace = T)
# 3. The outlook of the fishing/shrimping industry is positive
# Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
agree.options <- c("Strongly agree", "Agree", "Neutral", "Disagree", "Strongly disagree")
q3.future.outlook.vq <- sample(agree.options, n, replace = T)
# 4. Your opinions or concerns as a member of the coastal community are considered in the decision-making process
#  Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
q4.opinions.considered.vq <- sample(agree.options, n, replace = T)
# 5. Have you ever attended a meeting hosted by the Georgia Department of Natural Resources?
# Answer choices: Yes, No
# Output: qualitative binary
binary.qual.options <- c("Yes", "No")
q5.DNR.mtg.vq <- sample(binary.qual.options, n, replace = T)
# 6. Which dock do you use?
# Answer choices: none
# Output: free response
# creating hypothetical dock list for data generation purposes
dock.options <- c("Brunswick Dock", "Savannah Dock", "Piedmont Dock", "South GA Dock", "Derrien Dock", "St. Simons Dock", "Jekyll Dock")
q6.primary.dock.vq <- sample(dock.options, n, replace = T)
# 6a. If you use multiple docks, list them here
# Answer choices: none
# Output: free response
q6a.additional.dock.vq <- sample(c(dock.options, "N/A"), n, replace = T, p = c(.028571429, .028571429, .028571429, .028571429, .028571429, .028571429, .028571429, 0.8))
# 7. Where is your primary dock located?
# Answer choices: none
# Output: free response
#creating hypothetical dock list for data generation purposes
dock.location.options <- c("Brunswick", "Savannah", "Piedmont", "Derrien", "St. Simons", "Little St. Simons", "Jeckyll Island")
q7.dock.location.vq <- sample(dock.location.options, n, replace = T)
# 8. Primary dock location influences where you are able to fish or shrimp
# Answer choices: Strongly agree, agree, unsure, disagree, strongly disagree
# Output: likert scale qualitative
q8.dock.influence.fish.vq <- sample(agree.options, n, replace = T)
# 9. Black gill disease in coastal shrimp has influenced where and how you shrimp
# Answer choices: Strongly agree, agree, neutral, disagree, strongly disagree
# Output: likert scale qualitative
q9.black.gill.influence.vq <- sample(agree.options, n, replace = T)
# 9a. If so, how?
# Output: free response
q9a.black.gill.influence.expl.vq <- ifelse(q9.black.gill.influence.vq == "Strongly agree" | q9.black.gill.influence.vq == "Agree", "Explanation", "N/A")
# 10. Have you observed black gill disease in your shrimp catch?
# Answer choices: Yes, No
# Output: qualitative binary
q10.black.gill.observed.vq <- sample(binary.qual.options, n, replace = T)
# 10a. If yes, in which of the following coastal shrimping areas have you caught shrimp with black gill disease?
# Answer choices: North of Savannah, Between Sapelo Island and Savannah, Between St. Simons Island and Sapelo Island, Between St. Simons Island and Jekyll Island,
# South of Jekyll Island
# Output: qualitative categorical
black.gill.location.options <- c("North of Savannah", "Between Sapelo Island and Savannah", "Between St. Simons Island and Sapelo Island", "Between St. Simons Island and Jekyll Island",
"South of Jekyll Island")
q10a.black.gill.location.vq <- ifelse(q10.black.gill.observed.vq == "Yes", sample(black.gill.location.options, n, replace = T), "N/A")
# 10b. If yes, approximately when did you first observe black gill in your catch (how many years ago)?
# Answer choices: none
# Output: free response, but likely continuous integer
q10b.black.gill.time.vq <- ifelse(q10.black.gill.observed.vq == "Yes", sample(c(1:15), n, replace = T), "N/A")
########## End Vertex sheet questions. Now time to put it all together into one data frame
# tag for vertex sheet questions = ".vq"
vq<-ls(pattern = ".vq")
vq<-mixedsort(vq)
vertex.test.df <-as.data.frame(cbind(ego.df, profession.df,as.data.frame(mget(vq))))
names(vertex.test.df)[1]="ego"
write.csv(vertex.test.df,"vertex_test_df.csv")
View(vertex.test.df)
write.csv(vertex.test.df,"vertex_test_df.csv")
# Vertex ego list
ego.df <- as.vector(vertex.test.df$ego)
# Setting connections
max_connections = 7
alter.test.df<-data.frame()
for(i in 1:length(ego.df)){
ego.df.rm <- ego.df[!ego.df == ego.df[i]]
alter.i <- sample(ego.df.rm,sample(1:max_connections,1),replace = FALSE)
alter.df.i <- cbind(rep(ego.df[i],length(alter.i)),alter.i)
alter.test.df <- rbind(alter.test.df,alter.df.i)
}
str(alter.test.df)
names(alter.test.df)<-c("ego","alter")
# Sample size for generated data
n.edge.indiv <- length(alter.test.df$alter)
q2.years.known.eiq <- sample(c(1:30), n.edge.indiv, replace = T)
q3.years.worked.with.eiq <- round(runif(n.edge.indiv, min = 0, max = q2.years.known.eiq))
wk.relationship.options <- c("Employer", "Employee", "Colleague", "Other (please specify)")
q4.wk.relationship.eiq <- sample(wk.relationship.options, n.edge.indiv, replace = T)
q4a.wk.relationship.other.eiq <- ifelse(q4.wk.relationship.eiq == "Other (please specify)", "Explanation", "N/A")
ind.role.options <- c("Shrimper (captain)", "Shrimper (deck hand)", "Fisherman (professional or recreationa)", "Dock owner", "Dock employee",
"Georgia Department of Natural Resources", "Georgia Sea Grant Marine Extention", "Shrimp buyer", "Retired", "Other")
q5.ind.role.indiv.eiq <- sample(ind.role.options, n.edge.indiv, replace = T)
q5a.ind.role.indiv.other.eiq <- ifelse(q5.ind.role.indiv.eiq == "Other", "Explanation", "N/A")
q6.related.indiv.eiq <- sample(binary.qual.options, n.edge.indiv, replace = T)
related.options <- c("Parent", "Child", "Spouse or partner", "Cousin", "Other (please specify)")
q6a.related.descriptor.eiq <- ifelse(q6.related.indiv.eiq == "Yes", sample(related.options, n.edge.indiv, replace = T), "N/A")
q6b.related.descriptor.other.eiq <- ifelse(q6a.related.descriptor.eiq == "Other (please specify)", "Explain", "N/A")
interaction.freq.options <- c("Daily", "A few times per week", "Weekly", "Bi-weekly (every other week)", "A few times per month", "Monthly",
"Less than once per month")
q7.work.interaction.freq.eiq <- sample(interaction.freq.options, n.edge.indiv, replace = T)
q9.personal.interaction.freq.eiq <- sample(interaction.freq.options, n.edge.indiv, replace = T)
q11.hardship.discuss.eiq <- sample(binary.qual.options, n.edge.indiv, replace = T)
q12.positive.wk.relationship.eiq <- sample(agree.options, n.edge.indiv, replace = T)
q13.wk.relationship.quality.eiq <- sample(c(0:10), n.edge.indiv, replace = T)
q14.sust.industry.contribution.eiq <- sample(agree.options, n.edge.indiv, replace = T)
q15.trust.level.eiq <- sample(c(0:10), n.edge.indiv, replace = T)
q16.willingness.to.wk.with.eiq <- sample(c(0:10), n.edge.indiv, replace = T)
# tag for edge individual sheet questions = ".eiq"
eiq<-ls(pattern = ".eiq")
eiq
eiq<-mixedsort(eiq)
eiq
edge.indiv.test.df <-as.data.frame(cbind(alter.test.df,as.data.frame(mget(eiq))))
names(edge.indiv.test.df)[1]="ego"
names(edge.indiv.test.df)[2]="alter"
write.csv(edge.indiv.test.df,"edge_indiv_test_df.csv")
# Vertex ego list
ego.df <- as.vector(vertex.test.df$ego)
# Alter group/organization list
alter.org.list <- c("Docks and fish houses", "Commercial fishermen groups", "Commercial crabber groups", "Georgia Department of Natural Resources", "Shrimp buyers", "Other")
# Setting connections
max_connections = 5
alter.org.test.df<-data.frame()
for(i in 1:length(ego.df)){
ego.df.rm <- ego.df[!ego.df == ego.df[i]]
alter.org.i <- sample(alter.org.list,sample(1:max_connections,1),replace = FALSE)
alter.org.df.i <- cbind(rep(ego.df[i],length(alter.org.i)),alter.org.i)
alter.org.test.df <- rbind(alter.org.test.df,alter.org.df.i)
}
str(alter.org.test.df)
names(alter.org.test.df)<-c("ego","organization")
# Sample size for generated data
n.edge.org <- length(alter.org.test.df$organization)
q1a.org.interaction.freq.eoq <- sample(interaction.freq.options, n.edge.org, replace = T)
q2.years.wk.org.eoq <- sample(c(0:30), n.edge.org, replace = T)
q4.discuss.hardship.org.eoq <- sample(binary.qual.options, n.edge.org, replace = T)
q5.wk.relationship.org.eoq <- sample(agree.options, n.edge.org, replace = T)
q6.quality.wk.relationship.org.eoq <- sample(c(0:10), n.edge.org, replace = T)
q7.sustainability.industry.org.eoq <- sample(agree.options, n.edge.org, replace = T)
q8.trust.level.org.eoq <- sample(c(0:10), n.edge.org, replace=T)
q9.willingness.wk.org.eoq <- sample(c(0:10), n.edge.org, replace=T)
# tag for edge individual sheet questions = ".eiq"
eoq<-ls(pattern = ".eoq")
eoq<-mixedsort(eoq)
eoq
edge.org.test.df <-as.data.frame(cbind(alter.org.test.df,as.data.frame(mget(eoq))))
names(edge.org.test.df)[1]="ego"
names(edge.org.test.df)[2]="organization"
write.csv(edge.org.test.df,"edge_org_test_df.csv")
